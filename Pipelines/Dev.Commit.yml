# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pr:
- none

pool:
  vmImage: 'vs2017-win2016'

steps:
- checkout: self
  persistCredentials: true
  clean: false

- task: PowerPlatformToolInstaller@0
  inputs:
    DefaultVersion: true

- task: PowerPlatformPublishCustomizations@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'SIFAST Dev'

- task: PowerPlatformExportSolution@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'SIFAST Dev'
    SolutionName: '$(SolutionName)'
    SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'
    AsyncOperation: true
    MaxAsyncWaitTime: '60'
    ExportRelationshipRoles: true

- task: PowerPlatformUnpackSolution@0
  inputs:
    SolutionInputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'
    SolutionTargetFolder: '$(Build.SourcesDirectory)\$(SolutionName)'

- powershell: |
   echo "Committing all CDS solution changes"
   git config user.email "nepasrepondre-noreply@tc.gc.ca"
   git config user.name "tc-buildbot"
   git checkout development
   git add --all
   git commit -m "Update Solution - $env:SOLUTIONNAME: $env:COMMITMESSAGE"
   
   echo "Push solution changes to the remote repository"
   git -c http.extraheader="AUTHORIZATION: basic $(System.AccessToken)" push --force origin development

- task: PowerPlatformExportSolution@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'PACE Request Dev'
    SolutionName: '$(SolutionName)'
    SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName)_managed.zip'
    Managed: true
    AsyncOperation: true
    MaxAsyncWaitTime: '60'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)\$(SolutionName)_managed.zip'
    artifact: 'drop'
    publishLocation: 'pipeline'
